#include "MAE3Encoder.h"

MAE3Encoder encoder(36);  // Using GPIO 36 as in your main.cpp

void setup()
{
    Serial.begin(115200);
    Serial.println("MAE3 Encoder Calibration");

    encoder.begin();

    // Start calibration
    Serial.println("Starting calibration...");
    Serial.println("Please rotate the encoder through its full range");
    Serial.println("This will take about 30 seconds");
}

void loop()
{
    static uint32_t      minPulse            = 0xFFFFFFFF;  // Start with maximum value
    static uint32_t      maxPulse            = 0;           // Start with minimum value
    static unsigned long startTime           = millis();
    static bool          calibrationComplete = false;

    if (!calibrationComplete)
    {
        // Update encoder and get pulse width
        if (encoder.update())
        {
            uint32_t currentPulse = encoder.getPulseWidth();

            // Update min/max values
            if (currentPulse < minPulse)
                minPulse = currentPulse;
            if (currentPulse > maxPulse)
                maxPulse = currentPulse;

            // Print progress every second
            static unsigned long lastPrint = 0;
            if (millis() - lastPrint >= 1000)
            {
                Serial.print("Current pulse width: ");
                Serial.print(currentPulse);
                Serial.print(" us, Min: ");
                Serial.print(minPulse);
                Serial.print(" us, Max: ");
                Serial.print(maxPulse);
                Serial.println(" us");
                lastPrint = millis();
            }
        }

        // Check if calibration time is complete (30 seconds)
        if (millis() - startTime >= 30000)
        {
            calibrationComplete = true;

            // Add safety margins (5% on each side)
            uint32_t range = maxPulse - minPulse;
            minPulse       = minPulse - (range * 0.05);
            maxPulse       = maxPulse + (range * 0.05);

            Serial.println("\nCalibration Complete!");
            Serial.print("Recommended MIN_PULSE_WIDTH: ");
            Serial.println(minPulse);
            Serial.print("Recommended MAX_PULSE_WIDTH: ");
            Serial.println(maxPulse);

            // Print the values in the format needed for the header file
            Serial.println("\nCopy these values to MAE3Encoder.h:");
            Serial.print("static constexpr uint32_t MIN_PULSE_WIDTH = ");
            Serial.print(minPulse);
            Serial.println(";");
            Serial.print("static constexpr uint32_t MAX_PULSE_WIDTH = ");
            Serial.print(maxPulse);
            Serial.println(";");
        }
    }
}
